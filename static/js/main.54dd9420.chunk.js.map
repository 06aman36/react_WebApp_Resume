{"version":3,"sources":["Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","menuCollapse","setMenuCollapse","id","collapsed","className","onClick","iconShape","active","icon","App","players","playersArr","name","runs","loc","playerObj","hun","fif","catches","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTA8EeA,EApDA,WAGX,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAQF,OACE,mCACE,qBAAKC,GAAG,SAAR,SAEE,eAAC,IAAD,CAAYC,UAAWH,EAAvB,UACE,eAAC,IAAD,WACA,qBAAKI,UAAU,WAAf,SAEI,4BAAIJ,EAAe,OAAS,kBAE9B,qBAAKI,UAAU,YAAYC,QAff,WAELJ,GAAfD,IAaQ,SAEGA,EACC,cAAC,IAAD,IAEA,cAAC,IAAD,SAIN,cAAC,IAAD,UACE,eAAC,IAAD,CAAMM,UAAU,SAAhB,UACE,cAAC,IAAD,CAAUC,QAAQ,EAAMC,KAAM,cAAC,IAAD,IAA9B,kBAGA,cAAC,IAAD,CAAUA,KAAM,cAAC,IAAD,IAAhB,sBACA,cAAC,IAAD,CAAUA,KAAM,cAAC,IAAD,IAAhB,uBACA,cAAC,IAAD,CAAUA,KAAM,cAAC,IAAD,IAAhB,oBACA,cAAC,IAAD,CAAUA,KAAM,cAAC,IAAD,IAAhB,2BAGJ,cAAC,IAAD,UACE,cAAC,IAAD,CAAMF,UAAU,SAAhB,SACE,cAAC,IAAD,CAAUE,KAAM,cAAC,IAAD,IAAhB,gCCpBCC,E,kDA5Cb,aAAe,IAAD,8BACZ,gBACKC,QAAU,CAAC,SAAU,QAAS,QAAS,KAAM,UAClD,EAAKC,WAAa,CAChB,CACEC,KAAM,SACNC,KAAM,IACNC,IAAK,UAEP,CACEF,KAAM,QACNC,KAAM,IACNC,IAAK,UAEP,CACEF,KAAM,QACNC,KAAM,KACNC,IAAK,SAEP,CACEF,KAAM,SACNC,KAAM,KACNC,IAAK,aAGT,EAAKC,UAAY,CACfH,KAAM,SACNC,KAAM,IACNC,IAAK,SACLE,IAAK,MACLC,IAAK,KACLC,QAAS,KA/BC,E,0CAmCd,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,U,GAvCUe,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54dd9420.chunk.js","sourcesContent":["\r\n//import useState hook to create menu collapse state\r\nimport React, { useState } from \"react\";\r\n\r\n//import react pro sidebar components\r\nimport {\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SidebarHeader,\r\n  SidebarFooter,\r\n  SidebarContent,\r\n} from \"react-pro-sidebar\";\r\n\r\n//import icons from react icons\r\nimport { FaList, FaRegHeart } from \"react-icons/fa\";\r\nimport { FiHome, FiLogOut, FiArrowLeftCircle, FiArrowRightCircle } from \"react-icons/fi\";\r\nimport { RiPencilLine } from \"react-icons/ri\";\r\nimport { BiCog } from \"react-icons/bi\";\r\n\r\n\r\n//import sidebar css from react-pro-sidebar module and our custom css \r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport \"./Header.css\";\r\n\r\n\r\nconst Header = () => {\r\n  \r\n    //create initial menuCollapse state using useState hook\r\n    const [menuCollapse, setMenuCollapse] = useState(false)\r\n\r\n    //create a custom function that will change menucollapse state from false to true and true to false\r\n  const menuIconClick = () => {\r\n    //condition checking to change state from true to false and vice versa\r\n    menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"header\">\r\n          {/* collapsed props to change menu size using menucollapse state */}\r\n        <ProSidebar collapsed={menuCollapse}>\r\n          <SidebarHeader>\r\n          <div className=\"logotext\">\r\n              {/* small and big change using menucollapse state */}\r\n              <p>{menuCollapse ? \"Aman\" : \"Aman Resume\"}</p>\r\n            </div>\r\n            <div className=\"closemenu\" onClick={menuIconClick}>\r\n                {/* changing menu collapse icon on click */}\r\n              {menuCollapse ? (\r\n                <FiArrowRightCircle/>\r\n              ) : (\r\n                <FiArrowLeftCircle/>\r\n              )}\r\n            </div>\r\n          </SidebarHeader>\r\n          <SidebarContent>\r\n            <Menu iconShape=\"square\">\r\n              <MenuItem active={true} icon={<FiHome />}>\r\n                Home\r\n              </MenuItem>\r\n              <MenuItem icon={<FaList />}>Category</MenuItem>\r\n              <MenuItem icon={<FaRegHeart />}>Favourite</MenuItem>\r\n              <MenuItem icon={<RiPencilLine />}>Author</MenuItem>\r\n              <MenuItem icon={<BiCog />}>Settings</MenuItem>\r\n            </Menu>\r\n          </SidebarContent>\r\n          <SidebarFooter>\r\n            <Menu iconShape=\"square\">\r\n              <MenuItem icon={<FiLogOut />}>Logout</MenuItem>\r\n            </Menu>\r\n          </SidebarFooter>\r\n        </ProSidebar>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;","import \"./App.css\";\nimport React from \"react\";\nimport Header from './Header/Header'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.players = [\"sachin\", \"dhoni\", \"kohli\", \"uv\", \"Dravid\"];\n    this.playersArr = [\n      {\n        name: \"sachin\",\n        runs: 20000,\n        loc: \"Mumbai\",\n      },\n      {\n        name: \"Dhoni\",\n        runs: 10000,\n        loc: \"Ranchi\",\n      },\n      {\n        name: \"Kohli\",\n        runs: 15000,\n        loc: \"Delhi\",\n      },\n      {\n        name: \"Dravid\",\n        runs: 12000,\n        loc: \"Banglore\",\n      },\n    ];\n    this.playerObj = {\n      name: \"sachin\",\n      runs: 20000,\n      loc: \"mumbai\",\n      hun: \"100\",\n      fif: \"76\",\n      catches: 226,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}